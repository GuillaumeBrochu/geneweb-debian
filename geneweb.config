#!/bin/sh -e

# Some ideas stolen from the cvs package

# Config script for geneweb using debconf
. /usr/share/debconf/confmodule
db_version 2.0 || [ $? -lt 30 ]

db_title "Geneweb genealogy software"

# ISO 639 (language nales and codes) reference file
# Needs Depends: iso-codes
ISO639=/usr/share/iso-codes/iso_639.tab

# These will be used here and there below
SERVICES=/etc/services
INITFILE=/etc/init.d/geneweb
OLDRCFILE=/etc/geneweb/genewebrc
NEWRCFILE=/etc/default/geneweb
OLD_GENEWEBDB=/var/geneweb
GENEWEBDB=/var/lib/geneweb
DEFAULTLANG="en"
DEFAULTFULLLANG="English"
DEFAULTPORT=2317
DEFAULTRUNMODE="Always on"
DEFAULTREMOVE=false
DEFAULTOPTIONS=""

read_rcfile() {
    # Default values
    LANG=$DEFAULTLANG
    PORT=$DEFAULTPORT
    RUN_MODE="$DEFAULTRUNMODE"
    REMOVE=$DEFAULTREMOVE
    OPTIONS=$DEFAULTOPTIONS
    if [ -f /etc/default/geneweb ]; then
	. /etc/default/geneweb || true
    fi
}

translate_LANG() {
    # Waiting for a more general script in the iso-codes package
    # see debian-devel-french archives from April 2003
    case $LANG in 
	af)
	    FULLLANG="Afrikaans"
	;;
	bu)
	    FULLLANG="Bulgarian"
	;;
	ca)
	    FULLLANG="Catalan"
	;;
	zh)
	    FULLLANG="Chinese"
	;;
	cs)
	    FULLLANG="Czech"
	;;
	da)
	    FULLLANG="Danish"
	;;
	nl)
	    FULLLANG="Dutch"
	;;
	en)
	    FULLLANG="English"
	;;
	eo)
	    FULLLANG="Esperanto"
	;;
	et)
	    FULLLANG="Estonian"
	;;
	fi)
	    FULLLANG="Finnish"
	;;
	fr)
	    FULLLANG="French"
	;;
	de)
	    FULLLANG="German"
	;;
	he)
	    FULLLANG="Hebrew"
	;;
	is)
	    FULLLANG="Icelandic"
	;;
	it)
	    FULLLANG="Italian"
	;;
	lv)
	    FULLLANG="Latvian"
	;;
	no)
	    FULLLANG="Norwegian"
	;;
	pl)
	    FULLLANG="Polish"
	;;
	pt)
	    FULLLANG="Portuguese"
	;;
	ro)
	    FULLLANG="Romanian"
	;;
	ru)
	    FULLLANG="Russian"
	;;
	es)
	    FULLLANG="Spanish (Castilian)"
	;;
	sv)
	    FULLLANG="Swedish"
	;;
	*)
	    FULLLANG="English"
	;;
    esac
}

write_rcfile() {
   cat >$NEWRCFILE <<EOF
#
# GeneWeb Configuration Data
#
# This file may be changed manually, or by running "dpkg-reconfigure geneweb"

# The port which the daemon listens to
PORT="${PORT}"

# The default language
# Look at Geneweb documentation for valid values
LANG="${LANG}"

# The run mode
# Two possible values: "Always on" or "Manual"
# You need to use quotes
RUN_MODE="${RUN_MODE}"

# Additionnal options for gwd
# Example: OPTIONS="-a 192.168.1.1" for binding the daemon to a given address
# This setting is not handled by debconf
OPTIONS="${OPTIONS}"
EOF
}

set_debconf() {
    # Still have to find a way to store the language setting
    # (kept as "en" in rcfile and "English (en)" in debconf
    if [ "$RUN_MODE" ]; then
        db_set geneweb/run_mode "$RUN_MODE" || true
    fi
    if [ "$FULLLANG" ]; then
        db_set geneweb/lang "$FULLLANG" || true
    fi
    if [ "$PORT" ]; then
        db_set geneweb/port "$PORT" || true
    fi
    if [ "$REMOVE" ]; then
        db_set geneweb/remove_databases "$REMOVE" || true
    fi
}

get_debconf() {
    db_get geneweb/port
    PORT=$RET
    # If not present, use default
    if [ "$PORT" = "" ]
    then
	PORT=$DEFAULTPORT
    fi


    db_get geneweb/lang
    FULLLANG=$RET
    # If not present, use default
    if [ "$FULLLANG" = "" ]
    then
	FULLLANG=$DEFAULTFULLLANG
    fi
    # Find the two letter code for language
    # waiting for a more general script in the iso-codes package
    # LANG=`echo $FULLLANG | cut -f 2 -d "(" | cut -f 1 -d ")"`
    LANG=`grep "	${FULLLANG}\$" $ISO639 | grep -v XX | awk '{print $3};'`


    db_get geneweb/run_mode
    RUN_MODE="$RET"
    # If not present, use default
    if [ "$RUN_MODE" = "" ]
    then
	RUN_MODE="$DEFAULTRUNMODE"
    fi
}


input_settings() {
    db_input low geneweb/run_mode || true
    db_go
    db_get geneweb/run_mode
    RUN_MODE=$RET
    # If not present, use default
    if [ "$RUN_MODE" = "" ]
    then
	RUN_MODE="$DEFAULTRUNMODE"
    fi
    if [ "$RUN_MODE" = "Always on" ]
    then
	# These question will be asked only when running in daemon mode
	db_input medium geneweb/lang || true
	db_go
	
	db_input low geneweb/port || true
	db_go

	db_input medium geneweb/remove_databases || true
	db_go
    fi
}


# For proper handling of previous installations
# with incorrect official package putting databases
# in non FHS-compliant /var/geneweb directory
handle_oldsetup() {
    if [ -d $OLD_GENEWEBDB ]
    then
	if [ -d $GENEWEBDB ]
	then
	    # Move databases
	    find $OLD_GENEWEBDB -type d -name \*.gwb -mindepth 1 -maxdepth 1 -exec mv {} $GENEWEBDB \; 
	    # Move exported *.gw files
	    find $OLD_GENEWEBDB -type f -name \*.gw -mindepth 1 -maxdepth 1 -exec mv {} $GENEWEBDB \; 
	    # Move database lock files
	    find $OLD_GENEWEBDB -type f -name \*.lck -mindepth 1 -maxdepth 1 -exec mv {} $GENEWEBDB \; 
	fi
	# Move database access counters
	if [ -d $OLD_GENEWEBDB/cnt ]
	then
	    if [ -d $GENEWEBDB/cnt ]
	    then
		find $OLD_GENEWEBDB/cnt -mindepth 1 -maxdepth 1 -exec mv {} $GENEWEBDB/cnt \;
		rmdir $OLD_GENEWEBDB/cnt
	    fi
	fi
	# Move stuff in setup directory
	if [ -d $OLD_GENEWEBDB/setup ]
	then
	    if [ -d $GENEWEBDB/setup ]
	    then
		find $OLD_GENEWEBDB/setup -maxdepth 1 -mindepth 1 -exec mv {} $GENEWEBDB/setup \;
		rmdir $OLD_GENEWEBDB/setup
	    fi
	fi
	# Move stuff in etc directory
	if [ -d $OLD_GENEWEBDB/etc ]
	then
	    if [ -d $GENEWEBDB/etc ]
	    then
		find $OLD_GENEWEBDB/etc -maxdepth 1 -mindepth 1 -exec mv {} $GENEWEBDB/etc \;
		rmdir $OLD_GENEWEBDB/etc
	    fi
	fi
	# Move stuff in images directory
	if [ -d $OLD_GENEWEBDB/images ]
	then
	    if [ -d $GENEWEBDB/images ]
	    then
		find $OLD_GENEWEBDB/images -maxdepth 1 -mindepth 1 -exec mv {} $GENEWEBDB/images \;
		rmdir $OLD_GENEWEBDB/images
	    fi
	fi
    
	# If nothing remains in old directory then remove it
	if [ `find $OLD_GENEWEBDB -mindepth 0 | wc -l` != "1" ]
	then
	    # Issue warning message
	    db_input high geneweb/remainingdir ||:
	    db_go
	else
	    rmdir $OLD_GENEWEBDB
	fi
    fi
}

# This function converts old-style rc file
convert_oldrcfile() {
    if [ -f $OLDRCFILE ]
    then
	mv $OLDRCFILE $NEWRCFILE
	# Issue warning message
	db_input high geneweb/oldrcfile ||:
	db_go
    fi
}

# Old location for etc and lang directories was a bad idea
# These files should not be modified by the system administrator
# as they are modified upstream from version to version
remove_uselessdirs() {
    if [ -d /etc/geneweb/lang -o -d /etc/geneweb/etc ]
    then
	db_input high geneweb/remove_etcdirs || true
	db_go
    fi
}

## Main program
# We first read the settings file
# in order to get admin-modified settings
read_rcfile
# We get FULLLANG ("Name (code)" style) from LANG)
translate_LANG
# Debconf-stored values are updated accordingly
set_debconf
# They are re-read from Debconf
# mostly for having the correct value for LANG
get_debconf
# In case the package has never been configured, the settings
# are asked through debconf
input_settings
# They are re-re-read from debconf
# for updating variables (LANG again)
get_debconf
# The settings file is written
write_rcfile
# Then we do some other stuff, which could sometimes lead to
# debconf showing screens
# This is why they are here and not in the postinst script
handle_oldsetup
convert_oldrcfile
remove_uselessdirs


